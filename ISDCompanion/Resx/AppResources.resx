<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Networks" xml:space="preserve">
    <value>Networks</value>
  </data>
  <data name="OperatingSystems" xml:space="preserve">
    <value>Operating Systems</value>
  </data>
  <data name="Bitencodings" xml:space="preserve">
    <value>Bitencodings</value>
  </data>
  <data name="PageReplacement" xml:space="preserve">
    <value>Page Replacement</value>
  </data>
  <data name="Exercises" xml:space="preserve">
    <value>Exercises</value>
  </data>
  <data name="NewValues" xml:space="preserve">
    <value>New Values</value>
  </data>
  <data name="Requests" xml:space="preserve">
    <value>Requests</value>
  </data>
  <data name="ShowSolution" xml:space="preserve">
    <value>Show solution</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Profs" xml:space="preserve">
    <value>Profs</value>
  </data>
  <data name="Mensa" xml:space="preserve">
    <value>Mensa</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="Specialization" xml:space="preserve">
    <value>Specialization</value>
  </data>
  <data name="PricesLabel" xml:space="preserve">
    <value>Students / Staff / Guests</value>
  </data>
  <data name="Allergens" xml:space="preserve">
    <value>Allergens</value>
  </data>
  <data name="A1" xml:space="preserve">
    <value>Gluten</value>
  </data>
  <data name="A2" xml:space="preserve">
    <value>Shellfish and products/foods containing shellfish</value>
  </data>
  <data name="A3" xml:space="preserve">
    <value>Eggs and products/foods containing eggs</value>
  </data>
  <data name="A4" xml:space="preserve">
    <value>Fish</value>
  </data>
  <data name="A5" xml:space="preserve">
    <value>Peanuts and products/foods containing peanuts</value>
  </data>
  <data name="A6" xml:space="preserve">
    <value>Soy and products/foods containing soy</value>
  </data>
  <data name="A7" xml:space="preserve">
    <value>Milk and products/foods containing milk (including lactose)</value>
  </data>
  <data name="A8" xml:space="preserve">
    <value>Nuts and products/foods containing nuts</value>
  </data>
  <data name="A9" xml:space="preserve">
    <value>Celery and products/foods containing celery</value>
  </data>
  <data name="A10" xml:space="preserve">
    <value>Mustard and products/foods containing mustard</value>
  </data>
  <data name="A11" xml:space="preserve">
    <value>Sesame and products/foods containing sesame</value>
  </data>
  <data name="A12" xml:space="preserve">
    <value>Sulfur und sulfite</value>
  </data>
  <data name="A13" xml:space="preserve">
    <value>Lupine and products/foods containing lupine</value>
  </data>
  <data name="A14" xml:space="preserve">
    <value>Mollusk and products/foods containing mollusk</value>
  </data>
  <data name="Additives" xml:space="preserve">
    <value>Additives</value>
  </data>
  <data name="Z1" xml:space="preserve">
    <value>Food coloring</value>
  </data>
  <data name="Z2" xml:space="preserve">
    <value>Preservatives</value>
  </data>
  <data name="Z3" xml:space="preserve">
    <value>Antioxidants</value>
  </data>
  <data name="Z4" xml:space="preserve">
    <value>Flavor enhancer</value>
  </data>
  <data name="Z5" xml:space="preserve">
    <value>Phosphate</value>
  </data>
  <data name="Z6" xml:space="preserve">
    <value>Sulphureted</value>
  </data>
  <data name="Z7" xml:space="preserve">
    <value>Waxed</value>
  </data>
  <data name="Z8" xml:space="preserve">
    <value>Blackened</value>
  </data>
  <data name="Z9" xml:space="preserve">
    <value>Sweetener(s)</value>
  </data>
  <data name="Z10" xml:space="preserve">
    <value>Contains phenylalanine</value>
  </data>
  <data name="Z11" xml:space="preserve">
    <value>Taurine</value>
  </data>
  <data name="Z12" xml:space="preserve">
    <value>Nitrite pickling salt</value>
  </data>
  <data name="Z13" xml:space="preserve">
    <value>Caffeinated</value>
  </data>
  <data name="Z14" xml:space="preserve">
    <value>Contains quinine</value>
  </data>
  <data name="Z15" xml:space="preserve">
    <value>Milk protein</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="MensaInfo" xml:space="preserve">
    <value>Ingredients/Nutritional information is available at Studierendenwerk Paderborn's web page.</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="Maindishes" xml:space="preserve">
    <value>Dishes</value>
  </data>
  <data name="Soups" xml:space="preserve">
    <value>Soups</value>
  </data>
  <data name="Sidedishes" xml:space="preserve">
    <value>Side dishes</value>
  </data>
  <data name="Desserts" xml:space="preserve">
    <value>Desserts</value>
  </data>
  <data name="NoMeals" xml:space="preserve">
    <value>No meals to display. Mensa closed?</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>Error while fetching the data. Please try again later.</value>
  </data>
  <data name="Quiz" xml:space="preserve">
    <value>Quiz</value>
  </data>
  <data name="Buddy" xml:space="preserve">
    <value>Buddy</value>
  </data>
  <data name="Right" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="Wrong" xml:space="preserve">
    <value>Wrong</value>
  </data>
  <data name="Skip" xml:space="preserve">
    <value>Skip</value>
  </data>
  <data name="CRC" xml:space="preserve">
    <value>CRC</value>
  </data>
  <data name="MST" xml:space="preserve">
    <value>Minimum Spanning Tree</value>
  </data>
  <data name="ShortestPaths" xml:space="preserve">
    <value>Shortest Paths</value>
  </data>
  <data name="Netmasks" xml:space="preserve">
    <value>Netmasks</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Scheduling" xml:space="preserve">
    <value>Scheduling</value>
  </data>
  <data name="RealtimeScheduling" xml:space="preserve">
    <value>Realtime Scheduling</value>
  </data>
  <data name="Processes" xml:space="preserve">
    <value>Processes</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Student" xml:space="preserve">
    <value>Student</value>
  </data>
  <data name="Staff" xml:space="preserve">
    <value>Staff</value>
  </data>
  <data name="Guest" xml:space="preserve">
    <value>Guest</value>
  </data>
  <data name="ExerciseBasicLayout" xml:space="preserve">
    <value>Exercise Basic Layout</value>
  </data>
  <data name="InfoText_Buddy_Request" xml:space="preserve">
    <value>The process {0} requests {1} KB of memory. {2} KB are allocated for the process.</value>
  </data>
  <data name="InfoText_Buddy_Final" xml:space="preserve">
    <value>The process {0} is finished, memory is freed.</value>
  </data>
  <data name="InfoText_PageReplacement_Element_Added" xml:space="preserve">
    <value>The element {0} was added in Slot {1},</value>
  </data>
  <data name="InfoText_PageReplacement_Element_Added_Empty" xml:space="preserve">
    <value>because the Slot was empty.</value>
  </data>
  <data name="InfoText_PageReplacement_Element_Added_NotInUse" xml:space="preserve">
    <value>because the element contained in the Slot is not used anymore.</value>
  </data>
  <data name="InfoText_PageReplacement_Element_Exists" xml:space="preserve">
    <value>The element is already present in Slot {0}.</value>
  </data>
  <data name="InfoText_PageReplacement_Fifo_Element_Added_Distance" xml:space="preserve">
    <value>because the last use of the element contained in the Slot is the furthest ({0}) in the past.</value>
  </data>
  <data name="InfoText_PageReplacement_LRU_Element_Added_Distance" xml:space="preserve">
    <value>because the last use of the element contained in the Slot is the furthest ({0}) in the past.</value>
  </data>
  <data name="InfoText_PageReplacement_Optimal_Element_Added_NotInUse" xml:space="preserve">
    <value>because the use of the element contained in the Slot is the furthest ({0}) in the future.</value>
  </data>
  <data name="InfoText_PageReplacement_SecondChanceClock_Element_Added_NotPointer" xml:space="preserve">
    <value>The first Slot that is considered according to the pointer is Slot {0}. \n\nBecause the reference bit of this Slot was 1, the bit is first set to 0, after that the next slot is considered. \n\nSlot {1} was the first Slot with a reference bit = 0, where the element could be added. \n\nNow the pointer point at Slot {2}</value>
  </data>
  <data name="InfoText_PageReplacement_SecondChanceClock_Element_Added_Pointer" xml:space="preserve">
    <value>The first Slot that is considered according to the pointer is Slot {0}. \n\nBecause the reference bit of this Slot was 0, the element could be added. \n\nNow the pointer point at Slot {1}.</value>
  </data>
  <data name="InfoText_RealTimeScheduling_EDF" xml:space="preserve">
    <value>The process {0} currently has priority according EDF, because he has the earliest deadline. \n\nIt is started, since no other process with an earlier deadline is ready.</value>
  </data>
  <data name="InfoText_RealTimeScheduling_EDF_Info" xml:space="preserve">
    <value>\n\n\n\nEDF = Earliest Deadline First \n\nThe priority of a process is derived depending on the deadline of the process. The earlier the deadline, the higher of a priority is given.</value>
  </data>
  <data name="InfoText_RealTimeScheduling_RMS_High" xml:space="preserve">
    <value>Because the process {0} has the highest priority according to RMS, it is executed immedeately. \n\n The process can interrupt other processes with low or medium priority.</value>
  </data>
  <data name="InfoText_RealTimeScheduling_RMS_Info" xml:space="preserve">
    <value>\n\n\n\nRMS = Rate Monotonous Scheduling \n\nThe priority of a process is derived depending on how often a process appears. The more often a process appears, the higher of a priority is given.</value>
  </data>
  <data name="InfoText_RealTimeScheduling_RMS_Low" xml:space="preserve">
    <value>The process {0} has low priority according to RMS. \n\n It is executed, since no other process with a higher priority is ready. \n\nThe process can be interrupted by other processes with medium or high priority.</value>
  </data>
  <data name="InfoText_RealTimeScheduling_RMS_Medium" xml:space="preserve">
    <value>The process {0} has medium priority according to RMS. \n\nIt is executed, since no other process with a higher priority is ready. \n\nThe process can interrupt other processes with low priority and be interrupted by processes with high priority.</value>
  </data>
</root>